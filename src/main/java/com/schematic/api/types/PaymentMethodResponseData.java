/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.schematic.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PaymentMethodResponseData.Builder.class)
public final class PaymentMethodResponseData {
    private final Optional<String> accountLast4;

    private final Optional<String> accountName;

    private final Optional<String> bankName;

    private final Optional<String> billingEmail;

    private final Optional<String> billingName;

    private final Optional<String> cardBrand;

    private final Optional<Integer> cardExpMonth;

    private final Optional<Integer> cardExpYear;

    private final Optional<String> cardLast4;

    private final Optional<String> companyId;

    private final OffsetDateTime createdAt;

    private final String customerExternalId;

    private final String environmentId;

    private final String externalId;

    private final String id;

    private final String paymentMethodType;

    private final Optional<String> subscriptionExternalId;

    private final OffsetDateTime updatedAt;

    private final Map<String, Object> additionalProperties;

    private PaymentMethodResponseData(
            Optional<String> accountLast4,
            Optional<String> accountName,
            Optional<String> bankName,
            Optional<String> billingEmail,
            Optional<String> billingName,
            Optional<String> cardBrand,
            Optional<Integer> cardExpMonth,
            Optional<Integer> cardExpYear,
            Optional<String> cardLast4,
            Optional<String> companyId,
            OffsetDateTime createdAt,
            String customerExternalId,
            String environmentId,
            String externalId,
            String id,
            String paymentMethodType,
            Optional<String> subscriptionExternalId,
            OffsetDateTime updatedAt,
            Map<String, Object> additionalProperties) {
        this.accountLast4 = accountLast4;
        this.accountName = accountName;
        this.bankName = bankName;
        this.billingEmail = billingEmail;
        this.billingName = billingName;
        this.cardBrand = cardBrand;
        this.cardExpMonth = cardExpMonth;
        this.cardExpYear = cardExpYear;
        this.cardLast4 = cardLast4;
        this.companyId = companyId;
        this.createdAt = createdAt;
        this.customerExternalId = customerExternalId;
        this.environmentId = environmentId;
        this.externalId = externalId;
        this.id = id;
        this.paymentMethodType = paymentMethodType;
        this.subscriptionExternalId = subscriptionExternalId;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("account_last4")
    public Optional<String> getAccountLast4() {
        return accountLast4;
    }

    @JsonProperty("account_name")
    public Optional<String> getAccountName() {
        return accountName;
    }

    @JsonProperty("bank_name")
    public Optional<String> getBankName() {
        return bankName;
    }

    @JsonProperty("billing_email")
    public Optional<String> getBillingEmail() {
        return billingEmail;
    }

    @JsonProperty("billing_name")
    public Optional<String> getBillingName() {
        return billingName;
    }

    @JsonProperty("card_brand")
    public Optional<String> getCardBrand() {
        return cardBrand;
    }

    @JsonProperty("card_exp_month")
    public Optional<Integer> getCardExpMonth() {
        return cardExpMonth;
    }

    @JsonProperty("card_exp_year")
    public Optional<Integer> getCardExpYear() {
        return cardExpYear;
    }

    @JsonProperty("card_last4")
    public Optional<String> getCardLast4() {
        return cardLast4;
    }

    @JsonProperty("company_id")
    public Optional<String> getCompanyId() {
        return companyId;
    }

    @JsonProperty("created_at")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("customer_external_id")
    public String getCustomerExternalId() {
        return customerExternalId;
    }

    @JsonProperty("environment_id")
    public String getEnvironmentId() {
        return environmentId;
    }

    @JsonProperty("external_id")
    public String getExternalId() {
        return externalId;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("payment_method_type")
    public String getPaymentMethodType() {
        return paymentMethodType;
    }

    @JsonProperty("subscription_external_id")
    public Optional<String> getSubscriptionExternalId() {
        return subscriptionExternalId;
    }

    @JsonProperty("updated_at")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PaymentMethodResponseData && equalTo((PaymentMethodResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PaymentMethodResponseData other) {
        return accountLast4.equals(other.accountLast4)
                && accountName.equals(other.accountName)
                && bankName.equals(other.bankName)
                && billingEmail.equals(other.billingEmail)
                && billingName.equals(other.billingName)
                && cardBrand.equals(other.cardBrand)
                && cardExpMonth.equals(other.cardExpMonth)
                && cardExpYear.equals(other.cardExpYear)
                && cardLast4.equals(other.cardLast4)
                && companyId.equals(other.companyId)
                && createdAt.equals(other.createdAt)
                && customerExternalId.equals(other.customerExternalId)
                && environmentId.equals(other.environmentId)
                && externalId.equals(other.externalId)
                && id.equals(other.id)
                && paymentMethodType.equals(other.paymentMethodType)
                && subscriptionExternalId.equals(other.subscriptionExternalId)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.accountLast4,
                this.accountName,
                this.bankName,
                this.billingEmail,
                this.billingName,
                this.cardBrand,
                this.cardExpMonth,
                this.cardExpYear,
                this.cardLast4,
                this.companyId,
                this.createdAt,
                this.customerExternalId,
                this.environmentId,
                this.externalId,
                this.id,
                this.paymentMethodType,
                this.subscriptionExternalId,
                this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CreatedAtStage builder() {
        return new Builder();
    }

    public interface CreatedAtStage {
        CustomerExternalIdStage createdAt(OffsetDateTime createdAt);

        Builder from(PaymentMethodResponseData other);
    }

    public interface CustomerExternalIdStage {
        EnvironmentIdStage customerExternalId(String customerExternalId);
    }

    public interface EnvironmentIdStage {
        ExternalIdStage environmentId(String environmentId);
    }

    public interface ExternalIdStage {
        IdStage externalId(String externalId);
    }

    public interface IdStage {
        PaymentMethodTypeStage id(String id);
    }

    public interface PaymentMethodTypeStage {
        UpdatedAtStage paymentMethodType(String paymentMethodType);
    }

    public interface UpdatedAtStage {
        _FinalStage updatedAt(OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        PaymentMethodResponseData build();

        _FinalStage accountLast4(Optional<String> accountLast4);

        _FinalStage accountLast4(String accountLast4);

        _FinalStage accountName(Optional<String> accountName);

        _FinalStage accountName(String accountName);

        _FinalStage bankName(Optional<String> bankName);

        _FinalStage bankName(String bankName);

        _FinalStage billingEmail(Optional<String> billingEmail);

        _FinalStage billingEmail(String billingEmail);

        _FinalStage billingName(Optional<String> billingName);

        _FinalStage billingName(String billingName);

        _FinalStage cardBrand(Optional<String> cardBrand);

        _FinalStage cardBrand(String cardBrand);

        _FinalStage cardExpMonth(Optional<Integer> cardExpMonth);

        _FinalStage cardExpMonth(Integer cardExpMonth);

        _FinalStage cardExpYear(Optional<Integer> cardExpYear);

        _FinalStage cardExpYear(Integer cardExpYear);

        _FinalStage cardLast4(Optional<String> cardLast4);

        _FinalStage cardLast4(String cardLast4);

        _FinalStage companyId(Optional<String> companyId);

        _FinalStage companyId(String companyId);

        _FinalStage subscriptionExternalId(Optional<String> subscriptionExternalId);

        _FinalStage subscriptionExternalId(String subscriptionExternalId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements CreatedAtStage,
                    CustomerExternalIdStage,
                    EnvironmentIdStage,
                    ExternalIdStage,
                    IdStage,
                    PaymentMethodTypeStage,
                    UpdatedAtStage,
                    _FinalStage {
        private OffsetDateTime createdAt;

        private String customerExternalId;

        private String environmentId;

        private String externalId;

        private String id;

        private String paymentMethodType;

        private OffsetDateTime updatedAt;

        private Optional<String> subscriptionExternalId = Optional.empty();

        private Optional<String> companyId = Optional.empty();

        private Optional<String> cardLast4 = Optional.empty();

        private Optional<Integer> cardExpYear = Optional.empty();

        private Optional<Integer> cardExpMonth = Optional.empty();

        private Optional<String> cardBrand = Optional.empty();

        private Optional<String> billingName = Optional.empty();

        private Optional<String> billingEmail = Optional.empty();

        private Optional<String> bankName = Optional.empty();

        private Optional<String> accountName = Optional.empty();

        private Optional<String> accountLast4 = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PaymentMethodResponseData other) {
            accountLast4(other.getAccountLast4());
            accountName(other.getAccountName());
            bankName(other.getBankName());
            billingEmail(other.getBillingEmail());
            billingName(other.getBillingName());
            cardBrand(other.getCardBrand());
            cardExpMonth(other.getCardExpMonth());
            cardExpYear(other.getCardExpYear());
            cardLast4(other.getCardLast4());
            companyId(other.getCompanyId());
            createdAt(other.getCreatedAt());
            customerExternalId(other.getCustomerExternalId());
            environmentId(other.getEnvironmentId());
            externalId(other.getExternalId());
            id(other.getId());
            paymentMethodType(other.getPaymentMethodType());
            subscriptionExternalId(other.getSubscriptionExternalId());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("created_at")
        public CustomerExternalIdStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("customer_external_id")
        public EnvironmentIdStage customerExternalId(String customerExternalId) {
            this.customerExternalId = customerExternalId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("environment_id")
        public ExternalIdStage environmentId(String environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("external_id")
        public IdStage externalId(String externalId) {
            this.externalId = externalId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public PaymentMethodTypeStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("payment_method_type")
        public UpdatedAtStage paymentMethodType(String paymentMethodType) {
            this.paymentMethodType = paymentMethodType;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updated_at")
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage subscriptionExternalId(String subscriptionExternalId) {
            this.subscriptionExternalId = Optional.ofNullable(subscriptionExternalId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "subscription_external_id", nulls = Nulls.SKIP)
        public _FinalStage subscriptionExternalId(Optional<String> subscriptionExternalId) {
            this.subscriptionExternalId = subscriptionExternalId;
            return this;
        }

        @java.lang.Override
        public _FinalStage companyId(String companyId) {
            this.companyId = Optional.ofNullable(companyId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "company_id", nulls = Nulls.SKIP)
        public _FinalStage companyId(Optional<String> companyId) {
            this.companyId = companyId;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardLast4(String cardLast4) {
            this.cardLast4 = Optional.ofNullable(cardLast4);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "card_last4", nulls = Nulls.SKIP)
        public _FinalStage cardLast4(Optional<String> cardLast4) {
            this.cardLast4 = cardLast4;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardExpYear(Integer cardExpYear) {
            this.cardExpYear = Optional.ofNullable(cardExpYear);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "card_exp_year", nulls = Nulls.SKIP)
        public _FinalStage cardExpYear(Optional<Integer> cardExpYear) {
            this.cardExpYear = cardExpYear;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardExpMonth(Integer cardExpMonth) {
            this.cardExpMonth = Optional.ofNullable(cardExpMonth);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "card_exp_month", nulls = Nulls.SKIP)
        public _FinalStage cardExpMonth(Optional<Integer> cardExpMonth) {
            this.cardExpMonth = cardExpMonth;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardBrand(String cardBrand) {
            this.cardBrand = Optional.ofNullable(cardBrand);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "card_brand", nulls = Nulls.SKIP)
        public _FinalStage cardBrand(Optional<String> cardBrand) {
            this.cardBrand = cardBrand;
            return this;
        }

        @java.lang.Override
        public _FinalStage billingName(String billingName) {
            this.billingName = Optional.ofNullable(billingName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "billing_name", nulls = Nulls.SKIP)
        public _FinalStage billingName(Optional<String> billingName) {
            this.billingName = billingName;
            return this;
        }

        @java.lang.Override
        public _FinalStage billingEmail(String billingEmail) {
            this.billingEmail = Optional.ofNullable(billingEmail);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "billing_email", nulls = Nulls.SKIP)
        public _FinalStage billingEmail(Optional<String> billingEmail) {
            this.billingEmail = billingEmail;
            return this;
        }

        @java.lang.Override
        public _FinalStage bankName(String bankName) {
            this.bankName = Optional.ofNullable(bankName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bank_name", nulls = Nulls.SKIP)
        public _FinalStage bankName(Optional<String> bankName) {
            this.bankName = bankName;
            return this;
        }

        @java.lang.Override
        public _FinalStage accountName(String accountName) {
            this.accountName = Optional.ofNullable(accountName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "account_name", nulls = Nulls.SKIP)
        public _FinalStage accountName(Optional<String> accountName) {
            this.accountName = accountName;
            return this;
        }

        @java.lang.Override
        public _FinalStage accountLast4(String accountLast4) {
            this.accountLast4 = Optional.ofNullable(accountLast4);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "account_last4", nulls = Nulls.SKIP)
        public _FinalStage accountLast4(Optional<String> accountLast4) {
            this.accountLast4 = accountLast4;
            return this;
        }

        @java.lang.Override
        public PaymentMethodResponseData build() {
            return new PaymentMethodResponseData(
                    accountLast4,
                    accountName,
                    bankName,
                    billingEmail,
                    billingName,
                    cardBrand,
                    cardExpMonth,
                    cardExpYear,
                    cardLast4,
                    companyId,
                    createdAt,
                    customerExternalId,
                    environmentId,
                    externalId,
                    id,
                    paymentMethodType,
                    subscriptionExternalId,
                    updatedAt,
                    additionalProperties);
        }
    }
}
