/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.schematic.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CheckoutSettingsResponseData.Builder.class)
public final class CheckoutSettingsResponseData {
    private final boolean collectAddress;

    private final boolean collectEmail;

    private final boolean collectPhone;

    private final Map<String, Object> additionalProperties;

    private CheckoutSettingsResponseData(
            boolean collectAddress,
            boolean collectEmail,
            boolean collectPhone,
            Map<String, Object> additionalProperties) {
        this.collectAddress = collectAddress;
        this.collectEmail = collectEmail;
        this.collectPhone = collectPhone;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("collect_address")
    public boolean getCollectAddress() {
        return collectAddress;
    }

    @JsonProperty("collect_email")
    public boolean getCollectEmail() {
        return collectEmail;
    }

    @JsonProperty("collect_phone")
    public boolean getCollectPhone() {
        return collectPhone;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CheckoutSettingsResponseData && equalTo((CheckoutSettingsResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CheckoutSettingsResponseData other) {
        return collectAddress == other.collectAddress
                && collectEmail == other.collectEmail
                && collectPhone == other.collectPhone;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.collectAddress, this.collectEmail, this.collectPhone);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CollectAddressStage builder() {
        return new Builder();
    }

    public interface CollectAddressStage {
        CollectEmailStage collectAddress(boolean collectAddress);

        Builder from(CheckoutSettingsResponseData other);
    }

    public interface CollectEmailStage {
        CollectPhoneStage collectEmail(boolean collectEmail);
    }

    public interface CollectPhoneStage {
        _FinalStage collectPhone(boolean collectPhone);
    }

    public interface _FinalStage {
        CheckoutSettingsResponseData build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements CollectAddressStage, CollectEmailStage, CollectPhoneStage, _FinalStage {
        private boolean collectAddress;

        private boolean collectEmail;

        private boolean collectPhone;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CheckoutSettingsResponseData other) {
            collectAddress(other.getCollectAddress());
            collectEmail(other.getCollectEmail());
            collectPhone(other.getCollectPhone());
            return this;
        }

        @java.lang.Override
        @JsonSetter("collect_address")
        public CollectEmailStage collectAddress(boolean collectAddress) {
            this.collectAddress = collectAddress;
            return this;
        }

        @java.lang.Override
        @JsonSetter("collect_email")
        public CollectPhoneStage collectEmail(boolean collectEmail) {
            this.collectEmail = collectEmail;
            return this;
        }

        @java.lang.Override
        @JsonSetter("collect_phone")
        public _FinalStage collectPhone(boolean collectPhone) {
            this.collectPhone = collectPhone;
            return this;
        }

        @java.lang.Override
        public CheckoutSettingsResponseData build() {
            return new CheckoutSettingsResponseData(collectAddress, collectEmail, collectPhone, additionalProperties);
        }
    }
}
