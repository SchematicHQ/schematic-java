/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.schematic.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = EntitlementTriggerConfig.Builder.class)
public final class EntitlementTriggerConfig {
    private final String featureId;

    private final Map<String, Object> additionalProperties;

    private EntitlementTriggerConfig(String featureId, Map<String, Object> additionalProperties) {
        this.featureId = featureId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("feature_id")
    public String getFeatureId() {
        return featureId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof EntitlementTriggerConfig && equalTo((EntitlementTriggerConfig) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(EntitlementTriggerConfig other) {
        return featureId.equals(other.featureId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.featureId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FeatureIdStage builder() {
        return new Builder();
    }

    public interface FeatureIdStage {
        _FinalStage featureId(@NotNull String featureId);

        Builder from(EntitlementTriggerConfig other);
    }

    public interface _FinalStage {
        EntitlementTriggerConfig build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements FeatureIdStage, _FinalStage {
        private String featureId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(EntitlementTriggerConfig other) {
            featureId(other.getFeatureId());
            return this;
        }

        @java.lang.Override
        @JsonSetter("feature_id")
        public _FinalStage featureId(@NotNull String featureId) {
            this.featureId = Objects.requireNonNull(featureId, "featureId must not be null");
            return this;
        }

        @java.lang.Override
        public EntitlementTriggerConfig build() {
            return new EntitlementTriggerConfig(featureId, additionalProperties);
        }
    }
}
