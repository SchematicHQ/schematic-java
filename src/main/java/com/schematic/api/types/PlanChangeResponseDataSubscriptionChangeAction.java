/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class PlanChangeResponseDataSubscriptionChangeAction {
    public static final PlanChangeResponseDataSubscriptionChangeAction DOWNGRADE =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.DOWNGRADE, "downgrade");

    public static final PlanChangeResponseDataSubscriptionChangeAction INVALID =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.INVALID, "invalid");

    public static final PlanChangeResponseDataSubscriptionChangeAction UNSUBSCRIBE =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.UNSUBSCRIBE, "unsubscribe");

    public static final PlanChangeResponseDataSubscriptionChangeAction SUBSCRIBE =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.SUBSCRIBE, "subscribe");

    public static final PlanChangeResponseDataSubscriptionChangeAction UPGRADE_TRIAL =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.UPGRADE_TRIAL, "upgrade_trial");

    public static final PlanChangeResponseDataSubscriptionChangeAction UPGRADE =
            new PlanChangeResponseDataSubscriptionChangeAction(Value.UPGRADE, "upgrade");

    private final Value value;

    private final String string;

    PlanChangeResponseDataSubscriptionChangeAction(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof PlanChangeResponseDataSubscriptionChangeAction
                        && this.string.equals(((PlanChangeResponseDataSubscriptionChangeAction) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case DOWNGRADE:
                return visitor.visitDowngrade();
            case INVALID:
                return visitor.visitInvalid();
            case UNSUBSCRIBE:
                return visitor.visitUnsubscribe();
            case SUBSCRIBE:
                return visitor.visitSubscribe();
            case UPGRADE_TRIAL:
                return visitor.visitUpgradeTrial();
            case UPGRADE:
                return visitor.visitUpgrade();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static PlanChangeResponseDataSubscriptionChangeAction valueOf(String value) {
        switch (value) {
            case "downgrade":
                return DOWNGRADE;
            case "invalid":
                return INVALID;
            case "unsubscribe":
                return UNSUBSCRIBE;
            case "subscribe":
                return SUBSCRIBE;
            case "upgrade_trial":
                return UPGRADE_TRIAL;
            case "upgrade":
                return UPGRADE;
            default:
                return new PlanChangeResponseDataSubscriptionChangeAction(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        DOWNGRADE,

        INVALID,

        SUBSCRIBE,

        UNSUBSCRIBE,

        UPGRADE,

        UPGRADE_TRIAL,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitDowngrade();

        T visitInvalid();

        T visitSubscribe();

        T visitUnsubscribe();

        T visitUpgrade();

        T visitUpgradeTrial();

        T visitUnknown(String unknownType);
    }
}
