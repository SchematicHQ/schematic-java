/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class PlanChangeResponseDataBasePlanAction {
    public static final PlanChangeResponseDataBasePlanAction FALLBACK =
            new PlanChangeResponseDataBasePlanAction(Value.FALLBACK, "fallback");

    public static final PlanChangeResponseDataBasePlanAction INITIAL =
            new PlanChangeResponseDataBasePlanAction(Value.INITIAL, "initial");

    public static final PlanChangeResponseDataBasePlanAction TRAIT =
            new PlanChangeResponseDataBasePlanAction(Value.TRAIT, "trait");

    public static final PlanChangeResponseDataBasePlanAction TRIAL_EXPIRY =
            new PlanChangeResponseDataBasePlanAction(Value.TRIAL_EXPIRY, "trial_expiry");

    private final Value value;

    private final String string;

    PlanChangeResponseDataBasePlanAction(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof PlanChangeResponseDataBasePlanAction
                        && this.string.equals(((PlanChangeResponseDataBasePlanAction) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case FALLBACK:
                return visitor.visitFallback();
            case INITIAL:
                return visitor.visitInitial();
            case TRAIT:
                return visitor.visitTrait();
            case TRIAL_EXPIRY:
                return visitor.visitTrialExpiry();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static PlanChangeResponseDataBasePlanAction valueOf(String value) {
        switch (value) {
            case "fallback":
                return FALLBACK;
            case "initial":
                return INITIAL;
            case "trait":
                return TRAIT;
            case "trial_expiry":
                return TRIAL_EXPIRY;
            default:
                return new PlanChangeResponseDataBasePlanAction(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        FALLBACK,

        INITIAL,

        TRAIT,

        TRIAL_EXPIRY,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitFallback();

        T visitInitial();

        T visitTrait();

        T visitTrialExpiry();

        T visitUnknown(String unknownType);
    }
}
