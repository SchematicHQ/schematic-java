/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.schematic.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = RuleConditionResponseData.Builder.class)
public final class RuleConditionResponseData {
    private final Optional<String> comparisonTraitId;

    private final Optional<String> conditionGroupId;

    private final String conditionType;

    private final OffsetDateTime createdAt;

    private final String environmentId;

    private final Optional<String> eventSubtype;

    private final Optional<String> flagId;

    private final String id;

    private final Optional<String> metricPeriod;

    private final Optional<String> metricPeriodMonthReset;

    private final Optional<Integer> metricValue;

    private final String operator;

    private final Optional<String> planId;

    private final List<String> resourceIds;

    private final String ruleId;

    private final Optional<String> traitEntityType;

    private final Optional<String> traitId;

    private final String traitValue;

    private final OffsetDateTime updatedAt;

    private final Map<String, Object> additionalProperties;

    private RuleConditionResponseData(
            Optional<String> comparisonTraitId,
            Optional<String> conditionGroupId,
            String conditionType,
            OffsetDateTime createdAt,
            String environmentId,
            Optional<String> eventSubtype,
            Optional<String> flagId,
            String id,
            Optional<String> metricPeriod,
            Optional<String> metricPeriodMonthReset,
            Optional<Integer> metricValue,
            String operator,
            Optional<String> planId,
            List<String> resourceIds,
            String ruleId,
            Optional<String> traitEntityType,
            Optional<String> traitId,
            String traitValue,
            OffsetDateTime updatedAt,
            Map<String, Object> additionalProperties) {
        this.comparisonTraitId = comparisonTraitId;
        this.conditionGroupId = conditionGroupId;
        this.conditionType = conditionType;
        this.createdAt = createdAt;
        this.environmentId = environmentId;
        this.eventSubtype = eventSubtype;
        this.flagId = flagId;
        this.id = id;
        this.metricPeriod = metricPeriod;
        this.metricPeriodMonthReset = metricPeriodMonthReset;
        this.metricValue = metricValue;
        this.operator = operator;
        this.planId = planId;
        this.resourceIds = resourceIds;
        this.ruleId = ruleId;
        this.traitEntityType = traitEntityType;
        this.traitId = traitId;
        this.traitValue = traitValue;
        this.updatedAt = updatedAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("comparison_trait_id")
    public Optional<String> getComparisonTraitId() {
        return comparisonTraitId;
    }

    @JsonProperty("condition_group_id")
    public Optional<String> getConditionGroupId() {
        return conditionGroupId;
    }

    @JsonProperty("condition_type")
    public String getConditionType() {
        return conditionType;
    }

    @JsonProperty("created_at")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty("environment_id")
    public String getEnvironmentId() {
        return environmentId;
    }

    @JsonProperty("event_subtype")
    public Optional<String> getEventSubtype() {
        return eventSubtype;
    }

    @JsonProperty("flag_id")
    public Optional<String> getFlagId() {
        return flagId;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("metric_period")
    public Optional<String> getMetricPeriod() {
        return metricPeriod;
    }

    @JsonProperty("metric_period_month_reset")
    public Optional<String> getMetricPeriodMonthReset() {
        return metricPeriodMonthReset;
    }

    @JsonProperty("metric_value")
    public Optional<Integer> getMetricValue() {
        return metricValue;
    }

    @JsonProperty("operator")
    public String getOperator() {
        return operator;
    }

    @JsonProperty("plan_id")
    public Optional<String> getPlanId() {
        return planId;
    }

    @JsonProperty("resource_ids")
    public List<String> getResourceIds() {
        return resourceIds;
    }

    @JsonProperty("rule_id")
    public String getRuleId() {
        return ruleId;
    }

    @JsonProperty("trait_entity_type")
    public Optional<String> getTraitEntityType() {
        return traitEntityType;
    }

    @JsonProperty("trait_id")
    public Optional<String> getTraitId() {
        return traitId;
    }

    @JsonProperty("trait_value")
    public String getTraitValue() {
        return traitValue;
    }

    @JsonProperty("updated_at")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RuleConditionResponseData && equalTo((RuleConditionResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RuleConditionResponseData other) {
        return comparisonTraitId.equals(other.comparisonTraitId)
                && conditionGroupId.equals(other.conditionGroupId)
                && conditionType.equals(other.conditionType)
                && createdAt.equals(other.createdAt)
                && environmentId.equals(other.environmentId)
                && eventSubtype.equals(other.eventSubtype)
                && flagId.equals(other.flagId)
                && id.equals(other.id)
                && metricPeriod.equals(other.metricPeriod)
                && metricPeriodMonthReset.equals(other.metricPeriodMonthReset)
                && metricValue.equals(other.metricValue)
                && operator.equals(other.operator)
                && planId.equals(other.planId)
                && resourceIds.equals(other.resourceIds)
                && ruleId.equals(other.ruleId)
                && traitEntityType.equals(other.traitEntityType)
                && traitId.equals(other.traitId)
                && traitValue.equals(other.traitValue)
                && updatedAt.equals(other.updatedAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.comparisonTraitId,
                this.conditionGroupId,
                this.conditionType,
                this.createdAt,
                this.environmentId,
                this.eventSubtype,
                this.flagId,
                this.id,
                this.metricPeriod,
                this.metricPeriodMonthReset,
                this.metricValue,
                this.operator,
                this.planId,
                this.resourceIds,
                this.ruleId,
                this.traitEntityType,
                this.traitId,
                this.traitValue,
                this.updatedAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ConditionTypeStage builder() {
        return new Builder();
    }

    public interface ConditionTypeStage {
        CreatedAtStage conditionType(String conditionType);

        Builder from(RuleConditionResponseData other);
    }

    public interface CreatedAtStage {
        EnvironmentIdStage createdAt(OffsetDateTime createdAt);
    }

    public interface EnvironmentIdStage {
        IdStage environmentId(String environmentId);
    }

    public interface IdStage {
        OperatorStage id(String id);
    }

    public interface OperatorStage {
        RuleIdStage operator(String operator);
    }

    public interface RuleIdStage {
        TraitValueStage ruleId(String ruleId);
    }

    public interface TraitValueStage {
        UpdatedAtStage traitValue(String traitValue);
    }

    public interface UpdatedAtStage {
        _FinalStage updatedAt(OffsetDateTime updatedAt);
    }

    public interface _FinalStage {
        RuleConditionResponseData build();

        _FinalStage comparisonTraitId(Optional<String> comparisonTraitId);

        _FinalStage comparisonTraitId(String comparisonTraitId);

        _FinalStage conditionGroupId(Optional<String> conditionGroupId);

        _FinalStage conditionGroupId(String conditionGroupId);

        _FinalStage eventSubtype(Optional<String> eventSubtype);

        _FinalStage eventSubtype(String eventSubtype);

        _FinalStage flagId(Optional<String> flagId);

        _FinalStage flagId(String flagId);

        _FinalStage metricPeriod(Optional<String> metricPeriod);

        _FinalStage metricPeriod(String metricPeriod);

        _FinalStage metricPeriodMonthReset(Optional<String> metricPeriodMonthReset);

        _FinalStage metricPeriodMonthReset(String metricPeriodMonthReset);

        _FinalStage metricValue(Optional<Integer> metricValue);

        _FinalStage metricValue(Integer metricValue);

        _FinalStage planId(Optional<String> planId);

        _FinalStage planId(String planId);

        _FinalStage resourceIds(List<String> resourceIds);

        _FinalStage addResourceIds(String resourceIds);

        _FinalStage addAllResourceIds(List<String> resourceIds);

        _FinalStage traitEntityType(Optional<String> traitEntityType);

        _FinalStage traitEntityType(String traitEntityType);

        _FinalStage traitId(Optional<String> traitId);

        _FinalStage traitId(String traitId);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ConditionTypeStage,
                    CreatedAtStage,
                    EnvironmentIdStage,
                    IdStage,
                    OperatorStage,
                    RuleIdStage,
                    TraitValueStage,
                    UpdatedAtStage,
                    _FinalStage {
        private String conditionType;

        private OffsetDateTime createdAt;

        private String environmentId;

        private String id;

        private String operator;

        private String ruleId;

        private String traitValue;

        private OffsetDateTime updatedAt;

        private Optional<String> traitId = Optional.empty();

        private Optional<String> traitEntityType = Optional.empty();

        private List<String> resourceIds = new ArrayList<>();

        private Optional<String> planId = Optional.empty();

        private Optional<Integer> metricValue = Optional.empty();

        private Optional<String> metricPeriodMonthReset = Optional.empty();

        private Optional<String> metricPeriod = Optional.empty();

        private Optional<String> flagId = Optional.empty();

        private Optional<String> eventSubtype = Optional.empty();

        private Optional<String> conditionGroupId = Optional.empty();

        private Optional<String> comparisonTraitId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(RuleConditionResponseData other) {
            comparisonTraitId(other.getComparisonTraitId());
            conditionGroupId(other.getConditionGroupId());
            conditionType(other.getConditionType());
            createdAt(other.getCreatedAt());
            environmentId(other.getEnvironmentId());
            eventSubtype(other.getEventSubtype());
            flagId(other.getFlagId());
            id(other.getId());
            metricPeriod(other.getMetricPeriod());
            metricPeriodMonthReset(other.getMetricPeriodMonthReset());
            metricValue(other.getMetricValue());
            operator(other.getOperator());
            planId(other.getPlanId());
            resourceIds(other.getResourceIds());
            ruleId(other.getRuleId());
            traitEntityType(other.getTraitEntityType());
            traitId(other.getTraitId());
            traitValue(other.getTraitValue());
            updatedAt(other.getUpdatedAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("condition_type")
        public CreatedAtStage conditionType(String conditionType) {
            this.conditionType = conditionType;
            return this;
        }

        @java.lang.Override
        @JsonSetter("created_at")
        public EnvironmentIdStage createdAt(OffsetDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        @java.lang.Override
        @JsonSetter("environment_id")
        public IdStage environmentId(String environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public OperatorStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("operator")
        public RuleIdStage operator(String operator) {
            this.operator = operator;
            return this;
        }

        @java.lang.Override
        @JsonSetter("rule_id")
        public TraitValueStage ruleId(String ruleId) {
            this.ruleId = ruleId;
            return this;
        }

        @java.lang.Override
        @JsonSetter("trait_value")
        public UpdatedAtStage traitValue(String traitValue) {
            this.traitValue = traitValue;
            return this;
        }

        @java.lang.Override
        @JsonSetter("updated_at")
        public _FinalStage updatedAt(OffsetDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        @java.lang.Override
        public _FinalStage traitId(String traitId) {
            this.traitId = Optional.ofNullable(traitId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "trait_id", nulls = Nulls.SKIP)
        public _FinalStage traitId(Optional<String> traitId) {
            this.traitId = traitId;
            return this;
        }

        @java.lang.Override
        public _FinalStage traitEntityType(String traitEntityType) {
            this.traitEntityType = Optional.ofNullable(traitEntityType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "trait_entity_type", nulls = Nulls.SKIP)
        public _FinalStage traitEntityType(Optional<String> traitEntityType) {
            this.traitEntityType = traitEntityType;
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllResourceIds(List<String> resourceIds) {
            this.resourceIds.addAll(resourceIds);
            return this;
        }

        @java.lang.Override
        public _FinalStage addResourceIds(String resourceIds) {
            this.resourceIds.add(resourceIds);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "resource_ids", nulls = Nulls.SKIP)
        public _FinalStage resourceIds(List<String> resourceIds) {
            this.resourceIds.clear();
            this.resourceIds.addAll(resourceIds);
            return this;
        }

        @java.lang.Override
        public _FinalStage planId(String planId) {
            this.planId = Optional.ofNullable(planId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "plan_id", nulls = Nulls.SKIP)
        public _FinalStage planId(Optional<String> planId) {
            this.planId = planId;
            return this;
        }

        @java.lang.Override
        public _FinalStage metricValue(Integer metricValue) {
            this.metricValue = Optional.ofNullable(metricValue);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metric_value", nulls = Nulls.SKIP)
        public _FinalStage metricValue(Optional<Integer> metricValue) {
            this.metricValue = metricValue;
            return this;
        }

        @java.lang.Override
        public _FinalStage metricPeriodMonthReset(String metricPeriodMonthReset) {
            this.metricPeriodMonthReset = Optional.ofNullable(metricPeriodMonthReset);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metric_period_month_reset", nulls = Nulls.SKIP)
        public _FinalStage metricPeriodMonthReset(Optional<String> metricPeriodMonthReset) {
            this.metricPeriodMonthReset = metricPeriodMonthReset;
            return this;
        }

        @java.lang.Override
        public _FinalStage metricPeriod(String metricPeriod) {
            this.metricPeriod = Optional.ofNullable(metricPeriod);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "metric_period", nulls = Nulls.SKIP)
        public _FinalStage metricPeriod(Optional<String> metricPeriod) {
            this.metricPeriod = metricPeriod;
            return this;
        }

        @java.lang.Override
        public _FinalStage flagId(String flagId) {
            this.flagId = Optional.ofNullable(flagId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "flag_id", nulls = Nulls.SKIP)
        public _FinalStage flagId(Optional<String> flagId) {
            this.flagId = flagId;
            return this;
        }

        @java.lang.Override
        public _FinalStage eventSubtype(String eventSubtype) {
            this.eventSubtype = Optional.ofNullable(eventSubtype);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "event_subtype", nulls = Nulls.SKIP)
        public _FinalStage eventSubtype(Optional<String> eventSubtype) {
            this.eventSubtype = eventSubtype;
            return this;
        }

        @java.lang.Override
        public _FinalStage conditionGroupId(String conditionGroupId) {
            this.conditionGroupId = Optional.ofNullable(conditionGroupId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "condition_group_id", nulls = Nulls.SKIP)
        public _FinalStage conditionGroupId(Optional<String> conditionGroupId) {
            this.conditionGroupId = conditionGroupId;
            return this;
        }

        @java.lang.Override
        public _FinalStage comparisonTraitId(String comparisonTraitId) {
            this.comparisonTraitId = Optional.ofNullable(comparisonTraitId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "comparison_trait_id", nulls = Nulls.SKIP)
        public _FinalStage comparisonTraitId(Optional<String> comparisonTraitId) {
            this.comparisonTraitId = comparisonTraitId;
            return this;
        }

        @java.lang.Override
        public RuleConditionResponseData build() {
            return new RuleConditionResponseData(
                    comparisonTraitId,
                    conditionGroupId,
                    conditionType,
                    createdAt,
                    environmentId,
                    eventSubtype,
                    flagId,
                    id,
                    metricPeriod,
                    metricPeriodMonthReset,
                    metricValue,
                    operator,
                    planId,
                    resourceIds,
                    ruleId,
                    traitEntityType,
                    traitId,
                    traitValue,
                    updatedAt,
                    additionalProperties);
        }
    }
}
