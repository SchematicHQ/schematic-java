/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.resources.billing.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class SearchBillingPricesResponseParamsTiersMode {
    public static final SearchBillingPricesResponseParamsTiersMode GRADUATED =
            new SearchBillingPricesResponseParamsTiersMode(Value.GRADUATED, "graduated");

    public static final SearchBillingPricesResponseParamsTiersMode VOLUME =
            new SearchBillingPricesResponseParamsTiersMode(Value.VOLUME, "volume");

    private final Value value;

    private final String string;

    SearchBillingPricesResponseParamsTiersMode(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof SearchBillingPricesResponseParamsTiersMode
                        && this.string.equals(((SearchBillingPricesResponseParamsTiersMode) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case GRADUATED:
                return visitor.visitGraduated();
            case VOLUME:
                return visitor.visitVolume();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static SearchBillingPricesResponseParamsTiersMode valueOf(String value) {
        switch (value) {
            case "graduated":
                return GRADUATED;
            case "volume":
                return VOLUME;
            default:
                return new SearchBillingPricesResponseParamsTiersMode(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        VOLUME,

        GRADUATED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitVolume();

        T visitGraduated();

        T visitUnknown(String unknownType);
    }
}
