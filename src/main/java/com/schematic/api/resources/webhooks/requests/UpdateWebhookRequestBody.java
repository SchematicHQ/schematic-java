/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.schematic.api.resources.webhooks.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.schematic.api.core.ObjectMappers;
import com.schematic.api.resources.webhooks.types.UpdateWebhookRequestBodyRequestTypesItem;
import com.schematic.api.resources.webhooks.types.UpdateWebhookRequestBodyStatus;
import com.schematic.api.types.CreditTriggerConfig;
import com.schematic.api.types.EntitlementTriggerConfig;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateWebhookRequestBody.Builder.class)
public final class UpdateWebhookRequestBody {
    private final Optional<List<CreditTriggerConfig>> creditTriggerConfigs;

    private final Optional<List<EntitlementTriggerConfig>> entitlementTriggerConfigs;

    private final Optional<String> name;

    private final Optional<List<UpdateWebhookRequestBodyRequestTypesItem>> requestTypes;

    private final Optional<UpdateWebhookRequestBodyStatus> status;

    private final Optional<String> url;

    private final Map<String, Object> additionalProperties;

    private UpdateWebhookRequestBody(
            Optional<List<CreditTriggerConfig>> creditTriggerConfigs,
            Optional<List<EntitlementTriggerConfig>> entitlementTriggerConfigs,
            Optional<String> name,
            Optional<List<UpdateWebhookRequestBodyRequestTypesItem>> requestTypes,
            Optional<UpdateWebhookRequestBodyStatus> status,
            Optional<String> url,
            Map<String, Object> additionalProperties) {
        this.creditTriggerConfigs = creditTriggerConfigs;
        this.entitlementTriggerConfigs = entitlementTriggerConfigs;
        this.name = name;
        this.requestTypes = requestTypes;
        this.status = status;
        this.url = url;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("credit_trigger_configs")
    public Optional<List<CreditTriggerConfig>> getCreditTriggerConfigs() {
        return creditTriggerConfigs;
    }

    @JsonProperty("entitlement_trigger_configs")
    public Optional<List<EntitlementTriggerConfig>> getEntitlementTriggerConfigs() {
        return entitlementTriggerConfigs;
    }

    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @JsonProperty("request_types")
    public Optional<List<UpdateWebhookRequestBodyRequestTypesItem>> getRequestTypes() {
        return requestTypes;
    }

    @JsonProperty("status")
    public Optional<UpdateWebhookRequestBodyStatus> getStatus() {
        return status;
    }

    @JsonProperty("url")
    public Optional<String> getUrl() {
        return url;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateWebhookRequestBody && equalTo((UpdateWebhookRequestBody) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateWebhookRequestBody other) {
        return creditTriggerConfigs.equals(other.creditTriggerConfigs)
                && entitlementTriggerConfigs.equals(other.entitlementTriggerConfigs)
                && name.equals(other.name)
                && requestTypes.equals(other.requestTypes)
                && status.equals(other.status)
                && url.equals(other.url);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.creditTriggerConfigs,
                this.entitlementTriggerConfigs,
                this.name,
                this.requestTypes,
                this.status,
                this.url);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<List<CreditTriggerConfig>> creditTriggerConfigs = Optional.empty();

        private Optional<List<EntitlementTriggerConfig>> entitlementTriggerConfigs = Optional.empty();

        private Optional<String> name = Optional.empty();

        private Optional<List<UpdateWebhookRequestBodyRequestTypesItem>> requestTypes = Optional.empty();

        private Optional<UpdateWebhookRequestBodyStatus> status = Optional.empty();

        private Optional<String> url = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateWebhookRequestBody other) {
            creditTriggerConfigs(other.getCreditTriggerConfigs());
            entitlementTriggerConfigs(other.getEntitlementTriggerConfigs());
            name(other.getName());
            requestTypes(other.getRequestTypes());
            status(other.getStatus());
            url(other.getUrl());
            return this;
        }

        @JsonSetter(value = "credit_trigger_configs", nulls = Nulls.SKIP)
        public Builder creditTriggerConfigs(Optional<List<CreditTriggerConfig>> creditTriggerConfigs) {
            this.creditTriggerConfigs = creditTriggerConfigs;
            return this;
        }

        public Builder creditTriggerConfigs(List<CreditTriggerConfig> creditTriggerConfigs) {
            this.creditTriggerConfigs = Optional.ofNullable(creditTriggerConfigs);
            return this;
        }

        @JsonSetter(value = "entitlement_trigger_configs", nulls = Nulls.SKIP)
        public Builder entitlementTriggerConfigs(Optional<List<EntitlementTriggerConfig>> entitlementTriggerConfigs) {
            this.entitlementTriggerConfigs = entitlementTriggerConfigs;
            return this;
        }

        public Builder entitlementTriggerConfigs(List<EntitlementTriggerConfig> entitlementTriggerConfigs) {
            this.entitlementTriggerConfigs = Optional.ofNullable(entitlementTriggerConfigs);
            return this;
        }

        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        @JsonSetter(value = "request_types", nulls = Nulls.SKIP)
        public Builder requestTypes(Optional<List<UpdateWebhookRequestBodyRequestTypesItem>> requestTypes) {
            this.requestTypes = requestTypes;
            return this;
        }

        public Builder requestTypes(List<UpdateWebhookRequestBodyRequestTypesItem> requestTypes) {
            this.requestTypes = Optional.ofNullable(requestTypes);
            return this;
        }

        @JsonSetter(value = "status", nulls = Nulls.SKIP)
        public Builder status(Optional<UpdateWebhookRequestBodyStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(UpdateWebhookRequestBodyStatus status) {
            this.status = Optional.ofNullable(status);
            return this;
        }

        @JsonSetter(value = "url", nulls = Nulls.SKIP)
        public Builder url(Optional<String> url) {
            this.url = url;
            return this;
        }

        public Builder url(String url) {
            this.url = Optional.ofNullable(url);
            return this;
        }

        public UpdateWebhookRequestBody build() {
            return new UpdateWebhookRequestBody(
                    creditTriggerConfigs,
                    entitlementTriggerConfigs,
                    name,
                    requestTypes,
                    status,
                    url,
                    additionalProperties);
        }
    }
}
